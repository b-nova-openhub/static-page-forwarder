version: '2'

services:

  zookeeper:
    image: strimzi/kafka:0.19.0-kafka-2.5.0
    command: [
        "sh", "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs

  solr:
    image: solr
    depends_on:
      - zookeeper
    ports:
      - "8983:8983"
    volumes:
      - ./solr/schema.xml:/opt/solr/server/solr/configsets/_default/conf/managed-schema
    entrypoint:
      - bash
      - "-c"
      - "precreate-core blogCore; exec solr -f"

  dynamodb-local:
    image: amazon/dynamodb-local:latest
    container_name: dynamodb-local
    ports:
      - 8000:8000
    command: [ "-jar", "DynamoDBLocal.jar", "-sharedDb", "-inMemory" ]

  dynamodb-admin:
    image: aaronshaf/dynamodb-admin
    ports:
      - "8001:8001"
    environment:
      DYNAMO_ENDPOINT: "http://dynamodb-local:8000"
    depends_on:
      - dynamodb-local

  mailhog:
    image: mailhog/mailhog
    logging:
      driver: 'none'  # disable saving logs
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui

  init-dynamo:
    image: garland/aws-cli-docker
    command: >
      sh -c "aws dynamodb --endpoint-url http://dynamodb-local:8000 create-table --table-name config \
      --attribute-definitions AttributeName=key,AttributeType=S --key-schema AttributeName=key,KeyType=HASH \
      --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 \
      && aws dynamodb batch-write-item --endpoint-url http://dynamodb-local:8000 --request-items file:///tmp/data.json"
    links:
      - dynamodb-local
    environment:
      - AWS_ACCESS_KEY_ID=0
      - AWS_SECRET_ACCESS_KEY=0
      - AWS_DEFAULT_REGION=eu-central-1
    volumes:
      - ./:/tmp

  nats:
    image: nats
    ports:
      - "8222:8222"
      - "4222:4222"